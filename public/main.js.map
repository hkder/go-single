{"version":3,"file":"main.js","mappings":"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","sources":["webpack://go-game/webpack/bootstrap","webpack://go-game/./src/board/Board.ts","webpack://go-game/webpack/runtime/define property getters","webpack://go-game/webpack/runtime/hasOwnProperty shorthand","webpack://go-game/webpack/runtime/make namespace object","webpack://go-game/./src/rendering/BoardRenderer.ts","webpack://go-game/./src/storage/GameStorage.ts","webpack://go-game/./src/encryption/CryptoUtils.ts","webpack://go-game/./node_modules/engine.io-parser/build/esm/commons.js","webpack://go-game/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://go-game/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://go-game/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://go-game/./node_modules/engine.io-parser/build/esm/index.js","webpack://go-game/./node_modules/@socket.io/component-emitter/lib/esm/index.js","webpack://go-game/./node_modules/engine.io-client/build/esm/globals.js","webpack://go-game/./node_modules/engine.io-client/build/esm/util.js","webpack://go-game/./node_modules/engine.io-client/build/esm/transport.js","webpack://go-game/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://go-game/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://go-game/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://go-game/./node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack://go-game/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://go-game/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://go-game/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://go-game/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://go-game/./node_modules/engine.io-client/build/esm/socket.js","webpack://go-game/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://go-game/./node_modules/socket.io-parser/build/esm/binary.js","webpack://go-game/./node_modules/socket.io-parser/build/esm/index.js","webpack://go-game/./node_modules/socket.io-client/build/esm/on.js","webpack://go-game/./node_modules/socket.io-client/build/esm/socket.js","webpack://go-game/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://go-game/./node_modules/socket.io-client/build/esm/manager.js","webpack://go-game/./node_modules/socket.io-client/build/esm/index.js","webpack://go-game/./node_modules/socket.io-client/build/esm/url.js","webpack://go-game/./src/networking/SocketClient.ts","webpack://go-game/./src/sync/SyncManager.ts","webpack://go-game/./src/board/BoardStateManager.ts","webpack://go-game/./src/main.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","export enum Stone {\r\n  Black = 'black',\r\n  White = 'white'\r\n}\r\n\r\nexport interface Move {\r\n  i: number;\r\n  j: number;\r\n  stone: Stone;\r\n}\r\n\r\nexport class Board {\r\n  public boardSize: number;\r\n  public grid: (Stone | null)[][];\r\n  public moveHistory: Move[];\r\n  public currentPlayer: Stone;\r\n  public blackScore: number;\r\n  public whiteScore: number;\r\n\r\n  constructor(boardSize: number = 19) {\r\n    this.boardSize = boardSize;\r\n    this.grid = [];\r\n    this.moveHistory = [];\r\n    this.currentPlayer = Stone.Black;\r\n    this.blackScore = 0;\r\n    this.whiteScore = 0;\r\n    this.initBoard();\r\n  }\r\n\r\n  public initBoard(): void {\r\n    this.grid = [];\r\n    this.moveHistory = [];\r\n    for (let i = 0; i < this.boardSize; i++) {\r\n      this.grid[i] = [];\r\n      for (let j = 0; j < this.boardSize; j++) {\r\n        this.grid[i][j] = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  public getNeighbors(i: number, j: number): [number, number][] {\r\n    const neighbors: [number, number][] = [];\r\n    if (i > 0) neighbors.push([i - 1, j]);\r\n    if (i < this.boardSize - 1) neighbors.push([i + 1, j]);\r\n    if (j > 0) neighbors.push([i, j - 1]);\r\n    if (j < this.boardSize - 1) neighbors.push([i, j + 1]);\r\n    return neighbors;\r\n  }\r\n\r\n  public groupHasLiberty(i: number, j: number, stone: Stone): boolean {\r\n    const visited = new Set<string>();\r\n    const stack: [number, number][] = [[i, j]];\r\n\r\n    while (stack.length > 0) {\r\n      const [ci, cj] = stack.pop()!;\r\n      const key = `${ci},${cj}`;\r\n      if (visited.has(key)) continue;\r\n      visited.add(key);\r\n      const neighbors = this.getNeighbors(ci, cj);\r\n      for (const [ni, nj] of neighbors) {\r\n        if (this.grid[ni][nj] === null) return true;\r\n        if (this.grid[ni][nj] === stone && !visited.has(`${ni},${nj}`)) {\r\n          stack.push([ni, nj]);\r\n        }\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  public removeGroup(i: number, j: number, stone: Stone): number {\r\n    const visited = new Set<string>();\r\n    const stack: [number, number][] = [[i, j]];\r\n    let removedCount = 0;\r\n    while (stack.length > 0) {\r\n      const [ci, cj] = stack.pop()!;\r\n      const key = `${ci},${cj}`;\r\n      if (visited.has(key)) continue;\r\n      visited.add(key);\r\n      if (this.grid[ci][cj] !== null) {\r\n        this.grid[ci][cj] = null;\r\n        removedCount++;\r\n      }\r\n      const neighbors = this.getNeighbors(ci, cj);\r\n      for (const [ni, nj] of neighbors) {\r\n        if (this.grid[ni][nj] === stone && !visited.has(`${ni},${nj}`)) {\r\n          stack.push([ni, nj]);\r\n        }\r\n      }\r\n    }\r\n    return removedCount;\r\n  }\r\n\r\n  public captureStones(i: number, j: number, stone: Stone): void {\r\n    const opponent = stone === Stone.Black ? Stone.White : Stone.Black;\r\n    const neighbors = this.getNeighbors(i, j);\r\n    for (const [ni, nj] of neighbors) {\r\n      if (this.grid[ni][nj] === opponent) {\r\n        if (!this.groupHasLiberty(ni, nj, opponent)) {\r\n          const removedCount = this.removeGroup(ni, nj, opponent);\r\n          if (stone === Stone.Black) {\r\n            this.blackScore += removedCount;\r\n          } else {\r\n            this.whiteScore += removedCount;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Place a stone at (i, j). Returns true if the move was valid.\r\n   * If a stone is already present, allow removal only if it is the last move.\r\n   */\r\n  public placeStone(i: number, j: number): boolean {\r\n    if (this.grid[i][j] !== null) {\r\n      // Only allow removal if it is the last placed stone.\r\n      if (this.moveHistory.length > 0) {\r\n        const lastMove = this.moveHistory[this.moveHistory.length - 1];\r\n        if (lastMove.i === i && lastMove.j === j) {\r\n          this.grid[i][j] = null;\r\n          this.moveHistory.pop();\r\n          this.currentPlayer = lastMove.stone;\r\n          return true;\r\n        }\r\n      }\r\n      return false;\r\n    }\r\n\r\n    // Place the stone\r\n    this.grid[i][j] = this.currentPlayer;\r\n    // Capture opponent stones if any\r\n    this.captureStones(i, j, this.currentPlayer);\r\n\r\n    // Check for suicide move\r\n    if (!this.groupHasLiberty(i, j, this.currentPlayer)) {\r\n      this.grid[i][j] = null;\r\n      return false;\r\n    }\r\n\r\n    // Record the move and switch turn.\r\n    this.moveHistory.push({ i, j, stone: this.currentPlayer });\r\n    this.currentPlayer =\r\n      this.currentPlayer === Stone.Black ? Stone.White : Stone.Black;\r\n    return true;\r\n  }\r\n}\r\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// src/BoardRenderer.ts\r\nimport { Board, Stone } from \"../board/Board\";\r\n\r\nexport class BoardRenderer {\r\n  private canvas: HTMLCanvasElement;\r\n  private ctx: CanvasRenderingContext2D;\r\n  private board: Board;\r\n  public showStoneOrder: boolean = false;\r\n\r\n  constructor(canvas: HTMLCanvasElement, board: Board) {\r\n    this.canvas = canvas;\r\n    const ctx = canvas.getContext(\"2d\");\r\n    if (!ctx) {\r\n      throw new Error(\"Could not get 2D context from canvas\");\r\n    }\r\n    this.ctx = ctx;\r\n    this.board = board;\r\n  }\r\n\r\n  public setBoard(newBoard: Board): void {\r\n    this.board = newBoard;\r\n\r\n    // Update the board size selector in the UI to match the board dimensions.\r\n    const boardSizeSelect = document.getElementById(\"boardSizeSelect\") as HTMLSelectElement;\r\n    if (boardSizeSelect) {\r\n      boardSizeSelect.value = this.board.boardSize.toString();\r\n    }\r\n  }\r\n\r\n  private getMargin(): number {\r\n    return this.canvas.width / (this.board.boardSize + 1);\r\n  }\r\n\r\n  public drawBoard(): void {\r\n    const margin = this.getMargin();\r\n    const cellSize =\r\n      (this.canvas.width - 2 * margin) / (this.board.boardSize - 1);\r\n\r\n    // Clear and draw background.\r\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\r\n    this.ctx.fillStyle = \"#f5deb3\";\r\n    this.ctx.fillRect(0, 0, this.canvas.width, this.canvas.height);\r\n\r\n    // Draw grid lines.\r\n    this.ctx.strokeStyle = \"#000\";\r\n    for (let i = 0; i < this.board.boardSize; i++) {\r\n      const pos = margin + i * cellSize;\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(pos, margin);\r\n      this.ctx.lineTo(pos, this.canvas.height - margin);\r\n      this.ctx.stroke();\r\n\r\n      this.ctx.beginPath();\r\n      this.ctx.moveTo(margin, pos);\r\n      this.ctx.lineTo(this.canvas.width - margin, pos);\r\n      this.ctx.stroke();\r\n    }\r\n\r\n    // Draw stones.\r\n    for (let i = 0; i < this.board.boardSize; i++) {\r\n      for (let j = 0; j < this.board.boardSize; j++) {\r\n        const stone = this.board.grid[i][j];\r\n        if (stone !== null) {\r\n          this.drawStone(i, j, stone);\r\n        }\r\n      }\r\n    }\r\n\r\n    // If toggled, overlay the move order.\r\n    if (this.showStoneOrder) {\r\n      this.ctx.font = \"bold 16px sans-serif\";\r\n      this.ctx.textAlign = \"center\";\r\n      this.ctx.textBaseline = \"middle\";\r\n      for (let order = 0; order < this.board.moveHistory.length; order++) {\r\n        const move = this.board.moveHistory[order];\r\n        // Only overlay if the stone is still present.\r\n        if (this.board.grid[move.i][move.j] === move.stone) {\r\n          const x = margin + move.i * cellSize;\r\n          const y = margin + move.j * cellSize;\r\n          this.ctx.fillStyle = move.stone === Stone.Black ? \"white\" : \"black\";\r\n          this.ctx.fillText((order + 1).toString(), x, y);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  private drawStone(i: number, j: number, stone: Stone): void {\r\n    const margin = this.getMargin();\r\n    const cellSize =\r\n      (this.canvas.width - 2 * margin) / (this.board.boardSize - 1);\r\n    const x = margin + i * cellSize;\r\n    const y = margin + j * cellSize;\r\n    const radius = cellSize / 2 - 2;\r\n    this.ctx.beginPath();\r\n    this.ctx.arc(x, y, radius, 0, 2 * Math.PI);\r\n    this.ctx.fillStyle = stone === Stone.Black ? \"#000\" : \"#fff\";\r\n    this.ctx.fill();\r\n    this.ctx.strokeStyle = \"#000\";\r\n    this.ctx.stroke();\r\n  }\r\n}\r\n","// src/GameStorage.ts\r\nimport { Board, Stone, Move } from \"../board/Board\";\r\n\r\nexport interface SavedGameState {\r\n  name: string;\r\n  boardSize: number;\r\n  grid: (Stone | null)[][];\r\n  currentPlayer: Stone;\r\n  blackScore: number;\r\n  whiteScore: number;\r\n  moveHistory: Move[];\r\n  timestamp: string;\r\n}\r\n\r\nexport class GameStorage {\r\n  static saveGame(board: Board): void {\r\n    const timestamp = new Date().toISOString();\r\n    const gameState: SavedGameState = {\r\n      name: `Go ${board.boardSize}x${board.boardSize} - ${new Date().toLocaleString()}`,\r\n      boardSize: board.boardSize,\r\n      grid: board.grid,\r\n      currentPlayer: board.currentPlayer,\r\n      blackScore: board.blackScore,\r\n      whiteScore: board.whiteScore,\r\n      moveHistory: board.moveHistory,\r\n      timestamp: timestamp,\r\n    };\r\n\r\n    const savedGames: SavedGameState[] =\r\n      JSON.parse(localStorage.getItem(\"goSavedGames\") || \"[]\");\r\n    savedGames.push(gameState);\r\n    localStorage.setItem(\"goSavedGames\", JSON.stringify(savedGames));\r\n  }\r\n\r\n  static loadGame(gameState: SavedGameState, board: Board): void {\r\n    board.boardSize = gameState.boardSize;\r\n    board.grid = gameState.grid;\r\n    board.currentPlayer = gameState.currentPlayer;\r\n    board.blackScore = gameState.blackScore;\r\n    board.whiteScore = gameState.whiteScore;\r\n    board.moveHistory = gameState.moveHistory;\r\n  }\r\n\r\n  static deleteSavedGame(index: number): void {\r\n    const savedGames: SavedGameState[] =\r\n      JSON.parse(localStorage.getItem(\"goSavedGames\") || \"[]\");\r\n    savedGames.splice(index, 1);\r\n    localStorage.setItem(\"goSavedGames\", JSON.stringify(savedGames));\r\n  }\r\n\r\n  static getSavedGames(): SavedGameState[] {\r\n    return JSON.parse(localStorage.getItem(\"goSavedGames\") || \"[]\");\r\n  }\r\n}\r\n","// src/EncryptionUtil.ts\r\nexport class EncryptionUtil {\r\n  static arrayBufferToBase64(buffer: ArrayBuffer): string {\r\n    let binary = \"\";\r\n    const bytes = new Uint8Array(buffer);\r\n    for (let i = 0; i < bytes.byteLength; i++) {\r\n      binary += String.fromCharCode(bytes[i]);\r\n    }\r\n    return window.btoa(binary);\r\n  }\r\n\r\n  static base64ToArrayBuffer(base64: string): ArrayBuffer {\r\n    const binary = window.atob(base64);\r\n    const bytes = new Uint8Array(binary.length);\r\n    for (let i = 0; i < binary.length; i++) {\r\n      bytes[i] = binary.charCodeAt(i);\r\n    }\r\n    return bytes.buffer;\r\n  }\r\n\r\n  static async encryptData(\r\n    plaintext: string,\r\n    passphrase: string\r\n  ): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const salt = crypto.getRandomValues(new Uint8Array(16));\r\n    const iv = crypto.getRandomValues(new Uint8Array(12));\r\n    const keyMaterial = await crypto.subtle.importKey(\r\n      \"raw\",\r\n      encoder.encode(passphrase),\r\n      { name: \"PBKDF2\" },\r\n      false,\r\n      [\"deriveKey\"]\r\n    );\r\n    const key = await crypto.subtle.deriveKey(\r\n      {\r\n        name: \"PBKDF2\",\r\n        salt: salt,\r\n        iterations: 100000,\r\n        hash: \"SHA-256\",\r\n      },\r\n      keyMaterial,\r\n      { name: \"AES-GCM\", length: 256 },\r\n      false,\r\n      [\"encrypt\", \"decrypt\"]\r\n    );\r\n    const ciphertextBuffer = await crypto.subtle.encrypt(\r\n      { name: \"AES-GCM\", iv: iv },\r\n      key,\r\n      encoder.encode(plaintext)\r\n    );\r\n    const encryptedObject = {\r\n      salt: EncryptionUtil.arrayBufferToBase64(salt.buffer),\r\n      iv: EncryptionUtil.arrayBufferToBase64(iv.buffer),\r\n      ciphertext: EncryptionUtil.arrayBufferToBase64(ciphertextBuffer),\r\n    };\r\n    return JSON.stringify(encryptedObject);\r\n  }\r\n\r\n  static async decryptData(\r\n    encryptedStr: string,\r\n    passphrase: string\r\n  ): Promise<string> {\r\n    const encoder = new TextEncoder();\r\n    const decoder = new TextDecoder();\r\n    const encryptedObject = JSON.parse(encryptedStr);\r\n    const salt = new Uint8Array(\r\n      EncryptionUtil.base64ToArrayBuffer(encryptedObject.salt)\r\n    );\r\n    const iv = new Uint8Array(\r\n      EncryptionUtil.base64ToArrayBuffer(encryptedObject.iv)\r\n    );\r\n    const ciphertext = EncryptionUtil.base64ToArrayBuffer(\r\n      encryptedObject.ciphertext\r\n    );\r\n    const keyMaterial = await crypto.subtle.importKey(\r\n      \"raw\",\r\n      encoder.encode(passphrase),\r\n      { name: \"PBKDF2\" },\r\n      false,\r\n      [\"deriveKey\"]\r\n    );\r\n    const key = await crypto.subtle.deriveKey(\r\n      {\r\n        name: \"PBKDF2\",\r\n        salt: salt,\r\n        iterations: 100000,\r\n        hash: \"SHA-256\",\r\n      },\r\n      keyMaterial,\r\n      { name: \"AES-GCM\", length: 256 },\r\n      false,\r\n      [\"encrypt\", \"decrypt\"]\r\n    );\r\n    const decryptedBuffer = await crypto.subtle.decrypt(\r\n      { name: \"AES-GCM\", iv: iv },\r\n      key,\r\n      ciphertext\r\n    );\r\n    return decoder.decode(decryptedBuffer);\r\n  }\r\n}\r\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","// src/networking/SocketClient.ts\r\nimport { io, Socket } from \"socket.io-client\";\r\nimport { Stone } from \"../board/Board\";\r\n\r\nexport interface StoneMove {\r\n  boardSize: number;\r\n  i: number;\r\n  j: number;\r\n  stone: Stone;\r\n  currentPlayer: Stone;\r\n}\r\n\r\nexport class SocketClient {\r\n  private socket: Socket;\r\n  // Callback to notify when a stone move is received from the network.\r\n  public onStoneMove: ((move: StoneMove) => void) | null = null;\r\n\r\n  constructor() {\r\n    // Create the socket connection (pass URL/options if needed).\r\n    this.socket = io();\r\n    this.registerListeners();\r\n  }\r\n\r\n  public getSocket(): Socket {\r\n    return this.socket;\r\n  }\r\n\r\n  private registerListeners(): void {\r\n    this.socket.on(\"stoneMove\", (moveData: StoneMove) => {\r\n      console.log(\"Received move via network:\", moveData);\r\n      if (this.onStoneMove) {\r\n        this.onStoneMove(moveData);\r\n      }\r\n    });\r\n\r\n    this.socket.on(\"yourUsername\", (username: string) => {\r\n      const myUsernameEl = document.getElementById(\"myUsername\");\r\n      if (myUsernameEl) {\r\n        myUsernameEl.textContent = username;\r\n      }\r\n    });\r\n  }\r\n\r\n  public broadcastStoneMove(i: number, j: number, stone: Stone, nextPlayer: Stone, boardSize: number): void {\r\n    const moveData: StoneMove = { boardSize, i, j, stone, currentPlayer: nextPlayer };\r\n    this.socket.emit(\"stoneMove\", moveData);\r\n  }\r\n}\r\n","import { Socket } from \"socket.io-client\";\r\nimport { Board } from \"../board/Board\";\r\nimport { BoardRenderer } from \"../rendering/BoardRenderer\";\r\nimport { GameStorage } from \"../storage/GameStorage\";\r\nimport { BoardStateManager } from \"../board/BoardStateManager\";\r\n\r\nexport class SyncManager {\r\n  private socket: Socket;\r\n  private isOnline: boolean = false;\r\n  private currentSyncTarget: string | null = null; // Target client's socket id.\r\n  private syncButton: HTMLButtonElement;\r\n  private modeSelect: HTMLSelectElement;\r\n  private userListContainer: HTMLElement;\r\n  private usernameContainer: HTMLElement; // New element for showing username.\r\n  private boardStateManager: BoardStateManager;\r\n  private renderer: BoardRenderer;\r\n\r\n  constructor(socket: Socket, boardStateManager: BoardStateManager, renderer: BoardRenderer) {\r\n    this.socket = socket;\r\n    this.boardStateManager = boardStateManager;\r\n    this.renderer = renderer;\r\n\r\n    // Assume these UI elements exist in the DOM.\r\n    this.syncButton = document.getElementById(\"syncButton\") as HTMLButtonElement;\r\n    this.modeSelect = document.getElementById(\"modeSelect\") as HTMLSelectElement;\r\n    this.userListContainer = document.getElementById(\"userListContainer\") as HTMLElement;\r\n    this.usernameContainer = document.getElementById(\"usernameContainer\") as HTMLElement; // Grab the username container.\r\n\r\n    this.initializeUI();\r\n    this.registerSocketEvents();\r\n  }\r\n\r\n  public getIsOnline(): boolean {\r\n    return this.isOnline;\r\n  }\r\n\r\n  public setCurrentBoard(board: Board): void {\r\n    this.boardStateManager.setBoard(board);\r\n  }\r\n\r\n  public isConnectedTo(socketId: string): boolean {\r\n    return this.currentSyncTarget === socketId;\r\n  }\r\n\r\n  public getCurrentSyncTarget(): string | null {\r\n    return this.currentSyncTarget;\r\n  }\r\n\r\n  public getCurrentSyncTargetUsername(): string {\r\n    // Username is the socket id's first 4 characters.\r\n    if (!this.currentSyncTarget) {\r\n      return \"\";\r\n    }\r\n\r\n    return this.currentSyncTarget.substring(0, 4);\r\n  }\r\n\r\n  private initializeUI(): void {\r\n    // Listen for changes in the mode selector.\r\n    this.modeSelect.addEventListener(\"change\", () => {\r\n      const mode = this.modeSelect.value;\r\n      if (mode === \"online\") {\r\n        if (!this.isOnline) {\r\n          this.isOnline = true;\r\n          // Notify the server that we are now online.\r\n          this.socket.emit(\"goOnline\");\r\n        }\r\n        // Show user list, sync button, and username container.\r\n        this.userListContainer.style.display = \"block\";\r\n        this.syncButton.style.display = \"inline-block\";\r\n        this.usernameContainer.style.display = \"block\";\r\n      } else {  // offline mode\r\n        if (this.isOnline) {\r\n          // Notify the server that we are going offline.\r\n          this.socket.emit(\"goOffline\");\r\n        }\r\n        this.isOnline = false;\r\n        // Hide the user list, sync button, and username container.\r\n        this.userListContainer.style.display = \"none\";\r\n        this.syncButton.style.display = \"none\";\r\n        this.usernameContainer.style.display = \"none\";\r\n        this.currentSyncTarget = null;\r\n        // Optionally reset sync button style.\r\n        this.syncButton.style.backgroundColor = \"\";\r\n        this.syncButton.textContent = \"Sync\";\r\n      }\r\n    });\r\n\r\n    // Immediately trigger the change event so the UI reflects the initial mode.\r\n    this.modeSelect.dispatchEvent(new Event(\"change\"));\r\n\r\n    // When the sync button is clicked, send a sync request to the selected user.\r\n    this.syncButton.addEventListener(\"click\", () => {\r\n      if (!this.isOnline) return;\r\n      const selectedElem = this.userListContainer.querySelector(\".selected\");\r\n      if (selectedElem) {\r\n        const targetId = selectedElem.getAttribute(\"data-id\");\r\n        if (targetId) {\r\n          // Send sync request with the current board size.\r\n          this.socket.emit(\"syncRequest\", { targetId, boardSize: this.boardStateManager.getCurrentBoard().boardSize });\r\n          console.log(\"Sent sync request to\", targetId);\r\n        }\r\n      } else {\r\n        alert(\"Please select a client to sync with.\");\r\n      }\r\n    });\r\n\r\n    // When already synced, on mouse enter, propose resync.\r\n    this.syncButton.addEventListener(\"mouseenter\", () => {\r\n      if (this.currentSyncTarget !== null) {\r\n        // Change the background to a new fancy gradient (or any color you prefer).\r\n        this.syncButton.style.background = \"linear-gradient(45deg,rgb(28, 148, 179),rgb(29, 126, 16))\";\r\n        // Change the text to prompt resync.\r\n        this.syncButton.textContent = `Resync with ${this.getCurrentSyncTargetUsername()}?`;\r\n      }\r\n    });\r\n\r\n    // When the mouse leaves, revert back to the normal synced UI.\r\n    this.syncButton.addEventListener(\"mouseleave\", () => {\r\n      if (this.currentSyncTarget !== null) {\r\n        // Retrieve the current board size and update the sync UI to its synced state.\r\n        const boardSize = this.boardStateManager.getCurrentBoard().boardSize;\r\n        this.updateSyncUI(this.getCurrentSyncTargetUsername(), boardSize);\r\n      }\r\n    });\r\n  }\r\n\r\n  private registerSocketEvents(): void {\r\n    // Update the connected user list.\r\n    this.socket.on(\"updateUsers\", (users: Array<{ id: string; username: string }>) => {\r\n      // Exclude ourselves from the user list.\r\n      const filteredUsers = users.filter(user => user.id !== this.socket.id);\r\n      this.populateUserList(filteredUsers);\r\n\r\n      // Check if the current sync target is still online.\r\n      if (this.currentSyncTarget && !filteredUsers.some(user => user.id === this.currentSyncTarget)) {\r\n        // The synced target is no longer in the updated user list.\r\n        this.currentSyncTarget = null;\r\n        // Reset the sync button's UI.\r\n        this.syncButton.style.backgroundColor = \"\";\r\n        this.syncButton.textContent = \"Sync\";\r\n        console.log(\"Synced user is no longer online. Resetting sync state.\");\r\n      }\r\n    });\r\n\r\n    // Handle an incoming sync request.\r\n    this.socket.on(\"syncRequestReceived\", async (data: { fromSocket: string; fromUsername: string; boardSize: number }) => {\r\n      console.log(`Received sync request from ${data.fromUsername}`);\r\n      if (!this.isOnline) return;\r\n      if (this.currentSyncTarget !== null) {\r\n        // if we are already connected only service the request if the connector is the same as the requester\r\n        if (!this.isConnectedTo(data.fromSocket)){\r\n          console.log(\"Already synced with\", this.currentSyncTarget, \"so don't service the request from\", data.fromUsername);\r\n          return;\r\n        }\r\n        else {\r\n          console.log(\"Already synced with\", this.currentSyncTarget, \"so service the request from\", data.fromUsername);\r\n        }\r\n      }\r\n\r\n      // Use a custom fancy modal pop-up to get user input.\r\n      const accept = await this.showSyncRequestModal(data);\r\n      if (accept) {\r\n        // Create board state (a simple snapshot without encryption).\r\n        const boardState = {\r\n          boardSize: this.boardStateManager.getCurrentBoard().boardSize,\r\n          grid: this.boardStateManager.getCurrentBoard().grid,\r\n          moveHistory: this.boardStateManager.getCurrentBoard().moveHistory,\r\n          currentPlayer: this.boardStateManager.getCurrentBoard().currentPlayer,\r\n          blackScore: this.boardStateManager.getCurrentBoard().blackScore,\r\n          whiteScore: this.boardStateManager.getCurrentBoard().whiteScore,\r\n        };\r\n\r\n        this.socket.emit(\"syncAccept\", { toSocket: data.fromSocket, boardState });\r\n        console.log(\"Sent sync accept to\", data.fromSocket);\r\n      }\r\n    });\r\n\r\n    // Handle sync acceptance (from a client that accepted our request).\r\n    this.socket.on(\"syncAccepted\", (data: { fromSocket: string; fromUsername: string; boardState: any; }) => {\r\n      // Update our board state with the synced board info.\r\n      // Update the board that is cached in the renderer\r\n      console.log(\"Received sync accepted from\", data.fromSocket);\r\n\r\n      // populate the board state manager with the synced board info.\r\n      this.boardStateManager.updateBoard(data.boardState);\r\n\r\n      // Update the board that is cached in the board state manager.\r\n      this.boardStateManager.setCurrentBoard(data.boardState.boardSize);\r\n      this.renderer.setBoard(this.boardStateManager.getCurrentBoard());\r\n      this.renderer.drawBoard();\r\n      console.log(\"Updated board state and renderer\");\r\n\r\n      // Update UI to show the sync status.\r\n      this.currentSyncTarget = data.fromSocket;\r\n      this.updateSyncUI(`${data.fromUsername}`, data.boardState.boardSize);\r\n      this.socket.emit(`syncFinalAck`, { toSocket: data.fromSocket });\r\n    });\r\n\r\n    // Also handle a confirmation event on the acceptor side.\r\n    this.socket.on(\"syncAcceptedFinalAck\", (data: { fromSocket: string; fromUsername: string; }) => {\r\n      console.log(\"Received sync final ack from\", data.fromSocket);\r\n      this.currentSyncTarget = data.fromSocket;\r\n      this.updateSyncUI(`${data.fromUsername}`, this.boardStateManager.getCurrentBoard().boardSize);\r\n    });\r\n  }\r\n\r\n  // Helper: populate the user list so that a client can be selected.\r\n  private populateUserList(users: Array<{ id: string; username: string }>): void {\r\n    this.userListContainer.innerHTML = \"\";\r\n    users.forEach((user) => {\r\n      const userElem = document.createElement(\"div\");\r\n      userElem.textContent = user.username;\r\n      userElem.setAttribute(\"data-id\", user.id);\r\n      userElem.style.cursor = \"pointer\";\r\n      userElem.style.margin = \"4px\";\r\n      userElem.addEventListener(\"click\", () => {\r\n        // Mark the selected user.\r\n        this.userListContainer.querySelectorAll(\".selected\").forEach((el) => {\r\n          el.classList.remove(\"selected\");\r\n          (el as HTMLElement).style.backgroundColor = \"\";\r\n        });\r\n        userElem.classList.add(\"selected\");\r\n        userElem.style.backgroundColor = \"#ddd\";\r\n      });\r\n      this.userListContainer.appendChild(userElem);\r\n    });\r\n  }\r\n\r\n  // Helper: update the sync button UI.\r\n  private updateSyncUI(syncInfo: string, boardSize: number, color?: string): void {\r\n    // Use the provided color or default to a fancy linear gradient.\r\n    const fancyBackground = color || \"linear-gradient(45deg, #FF8A00, #E52E71)\";\r\n    this.syncButton.style.background = fancyBackground;\r\n    this.syncButton.textContent = `Synced with ${syncInfo} on ${boardSize}x${boardSize}`;\r\n  }\r\n\r\n  // New helper method for the fancy sync request modal.\r\n  private showSyncRequestModal(data: { fromSocket: string; fromUsername: string; boardSize: number }): Promise<boolean> {\r\n    return new Promise((resolve) => {\r\n      // Create an overlay for the modal.\r\n      const modalOverlay = document.createElement(\"div\");\r\n      modalOverlay.className = \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\";\r\n\r\n      // Create the modal content container.\r\n      const modalContent = document.createElement(\"div\");\r\n      modalContent.className = \"bg-white rounded shadow-lg p-6 w-96 text-center\";\r\n\r\n      // Create a message element.\r\n      const modalText = document.createElement(\"p\");\r\n      modalText.className = \"mb-4 text-lg\";\r\n      modalText.textContent = `User ${data.fromUsername} requests to sync board size ${data.boardSize} Accept?`;\r\n\r\n      // Create a container for the buttons.\r\n      const buttonContainer = document.createElement(\"div\");\r\n      buttonContainer.className = \"flex justify-around\";\r\n\r\n      // Create the 'Accept' button.\r\n      const acceptButton = document.createElement(\"button\");\r\n      acceptButton.className = \"bg-green-500 text-white py-2 px-4 rounded hover:bg-green-600\";\r\n      acceptButton.textContent = \"Accept\";\r\n      acceptButton.addEventListener(\"click\", () => {\r\n        document.body.removeChild(modalOverlay);\r\n        resolve(true);\r\n      });\r\n\r\n      // Create the 'Decline' button.\r\n      const declineButton = document.createElement(\"button\");\r\n      declineButton.className = \"bg-red-500 text-white py-2 px-4 rounded hover:bg-red-600\";\r\n      declineButton.textContent = \"Decline\";\r\n      declineButton.addEventListener(\"click\", () => {\r\n        document.body.removeChild(modalOverlay);\r\n        resolve(false);\r\n      });\r\n\r\n      // Append buttons to the container.\r\n      buttonContainer.appendChild(acceptButton);\r\n      buttonContainer.appendChild(declineButton);\r\n\r\n      // Append the message and button container to the modal content.\r\n      modalContent.appendChild(modalText);\r\n      modalContent.appendChild(buttonContainer);\r\n\r\n      // Append the modal content to the overlay.\r\n      modalOverlay.appendChild(modalContent);\r\n\r\n      // Add the modal overlay to the body.\r\n      document.body.appendChild(modalOverlay);\r\n    });\r\n  }\r\n} ","import { Board } from \"./Board\";\r\n\r\nexport class BoardStateManager {\r\n  private boardStates: { [boardSize: number]: Board } = {};\r\n  private currentBoardSize: number;\r\n\r\n  constructor(defaultBoardSize: number) {\r\n    this.currentBoardSize = defaultBoardSize;\r\n  }\r\n\r\n  /**\r\n   * Retrieve a board for the given boardSize.\r\n   * If it doesn't exist, create a new Board instance.\r\n   * @param boardSize number\r\n   * @returns Board\r\n   */\r\n  public getBoard(boardSize: number): Board {\r\n    if (!this.boardStates[boardSize]) {\r\n      this.boardStates[boardSize] = new Board(boardSize);\r\n    }\r\n    return this.boardStates[boardSize];\r\n  }\r\n\r\n  /**\r\n   * Update or store the board for a given board size.\r\n   * @param boardSize number\r\n   * @param board Board\r\n   */\r\n  public setBoard(board: Board): void {\r\n    this.boardStates[board.boardSize] = board;\r\n  }\r\n\r\n  public setCurrentBoard(boardSize: number): void {\r\n    this.currentBoardSize = boardSize;\r\n  }\r\n\r\n  public getCurrentBoard(): Board {\r\n    return this.getBoard(this.currentBoardSize);\r\n  }\r\n\r\n  public updateBoard(boardState: any): void {\r\n    // create a new board if it doesn't exist.\r\n    if (!this.boardStates[boardState.boardSize]) {\r\n      this.boardStates[boardState.boardSize] = new Board(boardState.boardSize);\r\n    }\r\n\r\n    // update the board with the new state.\r\n    this.boardStates[boardState.boardSize].grid = boardState.grid;\r\n    this.boardStates[boardState.boardSize].currentPlayer = boardState.currentPlayer;\r\n    this.boardStates[boardState.boardSize].blackScore = boardState.blackScore;\r\n    this.boardStates[boardState.boardSize].whiteScore = boardState.whiteScore;\r\n    this.boardStates[boardState.boardSize].moveHistory = boardState.moveHistory;\r\n  }\r\n}","// src/Main.ts\r\nimport { Board, Stone } from \"./board/Board\";\r\nimport { BoardRenderer } from \"./rendering/BoardRenderer\";\r\nimport { GameStorage } from \"./storage/GameStorage\";\r\nimport { EncryptionUtil } from \"./encryption/CryptoUtils\";\r\nimport { SocketClient, StoneMove } from \"./networking/SocketClient\";\r\nimport { SyncManager } from \"./sync/SyncManager\";\r\nimport { BoardStateManager } from \"./board/BoardStateManager\";\r\n\r\nconst PREDEFINED_PASSWORD = \"mySecretPassword123\";\r\nlet savedGameIndexToDelete: number | null = null;\r\n\r\nconst canvas = document.getElementById(\"goCanvas\") as HTMLCanvasElement;\r\nconst boardSizeSelect = document.getElementById(\"boardSizeSelect\") as HTMLSelectElement;\r\nconst blackScoreElem = document.getElementById(\"blackScore\") as HTMLElement;\r\nconst whiteScoreElem = document.getElementById(\"whiteScore\") as HTMLElement;\r\nconst turnIndicatorElem = document.getElementById(\"turnIndicator\") as HTMLElement;\r\nconst savedGamesContainer = document.getElementById(\"savedGames\") as HTMLElement;\r\nconst deleteModal = document.getElementById(\"deleteModal\") as HTMLElement;\r\n\r\n// Create a BoardStateManager instance to manage board states.\r\nconst defaultBoardSize = parseInt(boardSizeSelect.value) || 19;\r\nconst boardStateManager = new BoardStateManager(defaultBoardSize);\r\n\r\n// Initialize the renderer using the initial board.\r\nconst renderer = new BoardRenderer(canvas, boardStateManager.getCurrentBoard());\r\n\r\n// Create and initialize the SocketClient.\r\nconst socketClient = new SocketClient();\r\n\r\n// Initialize the sync manager.\r\nconst syncManager = new SyncManager(socketClient.getSocket(), boardStateManager, renderer);\r\n\r\n// Auto-load the current game state if it exists.\r\nconst savedCurrentGameStr = localStorage.getItem(\"goCurrentGame\");\r\nif (savedCurrentGameStr) {\r\n  try {\r\n    const gameState = JSON.parse(savedCurrentGameStr);\r\n    if (gameState.boardSize && gameState.grid && gameState.moveHistory !== undefined) {\r\n      GameStorage.loadGame(gameState, boardStateManager.getCurrentBoard());\r\n      boardSizeSelect.value = gameState.boardSize.toString();\r\n      renderer.setBoard(boardStateManager.getCurrentBoard());\r\n    }\r\n  } catch (e) {\r\n    console.error(\"Error loading current game state:\", e);\r\n  }\r\n}\r\n\r\nfunction isMoveAlreadyMade(i: number, j: number): boolean {\r\n  return boardStateManager.getCurrentBoard().moveHistory.some(move => move.i === i && move.j === j);\r\n}\r\n\r\n// When receiving a stone move from the network, apply it to the board.\r\nsocketClient.onStoneMove = (moveData: StoneMove) => {\r\n  console.log(\"Processing incoming network move\", moveData);\r\n\r\n  if (!syncManager.getIsOnline() || syncManager.getCurrentSyncTarget() === null) return;\r\n\r\n  // If the move's board size doesn't match the current board,\r\n  // update the board state for that board size.\r\n  if (moveData.boardSize !== boardStateManager.getCurrentBoard().boardSize) {\r\n    // In Sync mode, we don't need to update the board state for the other board.\r\n    // const otherBoard = boardStateManager.getBoard(moveData.boardSize);\r\n    // otherBoard.placeStone(moveData.i, moveData.j);\r\n    return;\r\n  }\r\n\r\n  // Validate the move is not already in the move history.\r\n  if (isMoveAlreadyMade(moveData.i, moveData.j)) {\r\n    alert(\"This move has already been made.\");\r\n    return;\r\n  }\r\n\r\n  // Set the renderer board to the current board.\r\n  renderer.setBoard(boardStateManager.getCurrentBoard());\r\n\r\n  // Attempt to place the stone.\r\n  if (boardStateManager.getCurrentBoard().placeStone(moveData.i, moveData.j)) {\r\n    renderer.drawBoard();\r\n    updateScoreBoard();\r\n  }\r\n};\r\n\r\nfunction updateScoreBoard(): void {\r\n  blackScoreElem.textContent = boardStateManager.getCurrentBoard().blackScore.toString();\r\n  whiteScoreElem.textContent = boardStateManager.getCurrentBoard().whiteScore.toString();\r\n  turnIndicatorElem.textContent =\r\n    boardStateManager.getCurrentBoard().currentPlayer === Stone.Black ? \"Black\" : \"White\";\r\n}\r\n\r\nfunction redraw(): void {\r\n  renderer.drawBoard();\r\n  updateScoreBoard();\r\n  saveCurrentGame();\r\n}\r\n\r\n// Canvas click handler.\r\n// canvas.addEventListener(\"click\", (event: MouseEvent) => {\r\n//   const rect = canvas.getBoundingClientRect();\r\n//   const margin = canvas.width / (boardStateManager.getCurrentBoard().boardSize + 1);\r\n//   const cellSize = (canvas.width - 2 * margin) / (boardStateManager.getCurrentBoard().boardSize - 1);\r\n//   const x = event.clientX - rect.left;\r\n//   const y = event.clientY - rect.top;\r\n//   const i = Math.round((x - margin) / cellSize);\r\n//   const j = Math.round((y - margin) / cellSize);\r\n//   if (i < 0 || i >= boardStateManager.getCurrentBoard().boardSize || j < 0 || j >= boardStateManager.getCurrentBoard().boardSize) {\r\n//     return;\r\n//   }\r\n\r\n//   // Save the stone that will be placed (the current player's stone).\r\n//   const stoneToPlace = boardStateManager.getCurrentBoard().currentPlayer;\r\n//   const success = boardStateManager.getCurrentBoard().placeStone(i, j);\r\n//   if (!success) {\r\n//     alert(\"Invalid move. Only the last stone can be removed or suicide moves are not allowed.\");\r\n//     return;\r\n//   }\r\n\r\n//   // temporary variable to get the current board.\r\n//   let currentBoard = boardStateManager.getCurrentBoard();\r\n\r\n//   // Broadcast the move over the network with the board size.\r\n//   if (syncManager.getIsOnline() && syncManager.getCurrentSyncTarget() !== null) {\r\n//     socketClient.broadcastStoneMove(i, j, stoneToPlace, currentBoard.currentPlayer, currentBoard.boardSize);\r\n//   }\r\n\r\n//   redraw();\r\n// });\r\n\r\n// Change board size.\r\nboardSizeSelect.addEventListener(\"change\", () => {\r\n  const newBoardSize = parseInt(boardSizeSelect.value);\r\n\r\n  // Save the current board state.\r\n  boardStateManager.setCurrentBoard(newBoardSize);\r\n\r\n  // Update the sync manager's board reference.\r\n  syncManager.setCurrentBoard(boardStateManager.getBoard(newBoardSize));\r\n\r\n  // Update the renderer's board reference.\r\n  renderer.setBoard(boardStateManager.getCurrentBoard());\r\n  redraw();\r\n});\r\n\r\n// Populate saved games list.\r\nfunction populateSavedGames(): void {\r\n  savedGamesContainer.innerHTML = \"\";\r\n  const savedGames = GameStorage.getSavedGames();\r\n  savedGames.forEach((game, index) => {\r\n    const btn = document.createElement(\"button\");\r\n    btn.textContent = game.name ? game.name : `Saved Game ${index + 1}`;\r\n    btn.style.width = \"100%\";\r\n    btn.addEventListener(\"click\", () => {\r\n      GameStorage.loadGame(game, boardStateManager.getCurrentBoard());\r\n      redraw();\r\n    });\r\n    btn.addEventListener(\"contextmenu\", (event: MouseEvent) => {\r\n      event.preventDefault();\r\n      savedGameIndexToDelete = index;\r\n      showDeleteModal();\r\n    });\r\n    savedGamesContainer.appendChild(btn);\r\n  });\r\n}\r\n\r\nfunction showDeleteModal(): void {\r\n  deleteModal.classList.remove(\"hidden\");\r\n}\r\n\r\nfunction hideDeleteModal(): void {\r\n  deleteModal.classList.add(\"hidden\");\r\n}\r\n\r\n(document.getElementById(\"confirmDelete\") as HTMLButtonElement).addEventListener(\"click\", () => {\r\n  if (savedGameIndexToDelete !== null) {\r\n    GameStorage.deleteSavedGame(savedGameIndexToDelete);\r\n    savedGameIndexToDelete = null;\r\n    hideDeleteModal();\r\n    populateSavedGames();\r\n  }\r\n});\r\n\r\n(document.getElementById(\"cancelDelete\") as HTMLButtonElement).addEventListener(\"click\", () => {\r\n  savedGameIndexToDelete = null;\r\n  hideDeleteModal();\r\n});\r\n\r\n(document.getElementById(\"saveGameBtn\") as HTMLButtonElement).addEventListener(\"click\", () => {\r\n  GameStorage.saveGame(boardStateManager.getCurrentBoard());\r\n  populateSavedGames();\r\n});\r\n\r\n(document.getElementById(\"clearGameBtn\") as HTMLButtonElement).addEventListener(\"click\", () => {\r\n  boardStateManager.getCurrentBoard().initBoard();\r\n  boardStateManager.getCurrentBoard().currentPlayer = Stone.Black;\r\n  boardStateManager.getCurrentBoard().blackScore = 0;\r\n  boardStateManager.getCurrentBoard().whiteScore = 0;\r\n  localStorage.removeItem(\"goCurrentGame\");\r\n  redraw();\r\n});\r\n\r\n(document.getElementById(\"toggleOrderBtn\") as HTMLButtonElement).addEventListener(\"click\", () => {\r\n  renderer.showStoneOrder = !renderer.showStoneOrder;\r\n  redraw();\r\n});\r\n\r\n// Export game functionality.\r\nasync function exportGameToFile(): Promise<void> {\r\n  const timestamp = new Date().toISOString();\r\n  const gameState = {\r\n    name: `Go ${boardStateManager.getCurrentBoard().boardSize}x${boardStateManager.getCurrentBoard().boardSize} - ${new Date().toLocaleString()}`,\r\n    boardSize: boardStateManager.getCurrentBoard().boardSize,\r\n    grid: boardStateManager.getCurrentBoard().grid,\r\n    currentPlayer: boardStateManager.getCurrentBoard().currentPlayer,\r\n    blackScore: boardStateManager.getCurrentBoard().blackScore,\r\n    whiteScore: boardStateManager.getCurrentBoard().whiteScore,\r\n    moveHistory: boardStateManager.getCurrentBoard().moveHistory,\r\n    timestamp: timestamp,\r\n  };\r\n  const jsonString = JSON.stringify(gameState, null, 2);\r\n  try {\r\n    const encryptedData = await EncryptionUtil.encryptData(jsonString, PREDEFINED_PASSWORD);\r\n    const blob = new Blob([encryptedData], { type: \"application/json\" });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement(\"a\");\r\n    a.href = url;\r\n    a.download = `go_game_${boardStateManager.getCurrentBoard().boardSize}x${boardStateManager.getCurrentBoard().boardSize}_${timestamp}.enc.json`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  } catch (err) {\r\n    alert(\"Error encrypting game state: \" + err);\r\n  }\r\n}\r\n\r\n(document.getElementById(\"exportGameBtn\") as HTMLButtonElement)?.addEventListener(\"click\", exportGameToFile);\r\n\r\n// Import game functionality.\r\nasync function importGameFromFile(file: File): Promise<void> {\r\n  const reader = new FileReader();\r\n  reader.onload = async (e) => {\r\n    try {\r\n      const encryptedContent = e.target!.result as string;\r\n      const decryptedContent = await EncryptionUtil.decryptData(encryptedContent, PREDEFINED_PASSWORD);\r\n      const gameState = JSON.parse(decryptedContent);\r\n      // Save the imported game.\r\n      const savedGames = GameStorage.getSavedGames();\r\n      savedGames.push(gameState);\r\n      localStorage.setItem(\"goSavedGames\", JSON.stringify(savedGames));\r\n      populateSavedGames();\r\n      GameStorage.loadGame(gameState, boardStateManager.getCurrentBoard());\r\n      redraw();\r\n    } catch (err) {\r\n      alert(\"Error loading or decrypting game file.\");\r\n      console.error(err);\r\n    }\r\n  };\r\n  reader.readAsText(file);\r\n}\r\n\r\n(document.getElementById(\"importGameInput\") as HTMLInputElement)?.addEventListener(\"change\", (e) => {\r\n  const files = (e.target as HTMLInputElement).files;\r\n  if (files && files.length > 0) {\r\n    importGameFromFile(files[0]);\r\n  }\r\n});\r\n\r\n// Add listener to delete all saved games.\r\n(document.getElementById(\"deleteAllGamesBtn\") as HTMLButtonElement)?.addEventListener(\"click\", () => {\r\n  if (confirm(\"Are you sure you want to delete all saved games?\")) {\r\n    localStorage.removeItem(\"goSavedGames\");\r\n    populateSavedGames();\r\n  }\r\n});\r\n\r\nfunction saveCurrentGame(): void {\r\n  const gameState = {\r\n    boardSize: boardStateManager.getCurrentBoard().boardSize,\r\n    grid: boardStateManager.getCurrentBoard().grid,\r\n    currentPlayer: boardStateManager.getCurrentBoard().currentPlayer,\r\n    blackScore: boardStateManager.getCurrentBoard().blackScore,\r\n    whiteScore: boardStateManager.getCurrentBoard().whiteScore,\r\n    moveHistory: boardStateManager.getCurrentBoard().moveHistory,\r\n    timestamp: new Date().toISOString(),\r\n  };\r\n  localStorage.setItem(\"goCurrentGame\", JSON.stringify(gameState));\r\n}\r\n\r\n// Utility: get the accurate canvas coordinates from a mouse or touch event.\r\nfunction getCanvasCoordinates(e: MouseEvent | TouchEvent) {\r\n  const rect = canvas.getBoundingClientRect();\r\n  // Use touch or mouse coordinates\r\n  let clientX: number, clientY: number;\r\n  if (e instanceof TouchEvent) {\r\n    clientX = e.touches[0].clientX;\r\n    clientY = e.touches[0].clientY;\r\n  } else {\r\n    clientX = e.clientX;\r\n    clientY = e.clientY;\r\n  }\r\n  // Determine the displayed coordinate relative to the canvas top-left\r\n  const xDisplayed = clientX - rect.left;\r\n  const yDisplayed = clientY - rect.top;\r\n  // Scale factor to map from displayed size to canvas internal resolution\r\n  const scaleX = canvas.width / rect.width;\r\n  const scaleY = canvas.height / rect.height;\r\n  return {\r\n    x: xDisplayed * scaleX,\r\n    y: yDisplayed * scaleY\r\n  };\r\n}\r\n\r\nfunction handleCanvasInteraction(e: MouseEvent | TouchEvent) {\r\n  // Prevent default behavior for touch events to avoid unintended scrolling/zooming\r\n  e.preventDefault();\r\n\r\n  const { x, y } = getCanvasCoordinates(e);\r\n  const boardSize = boardStateManager.getCurrentBoard().boardSize;\r\n  const margin = canvas.width / (boardSize + 1);\r\n  const cellSize = (canvas.width - 2 * margin) / (boardSize - 1);\r\n  \r\n  const i = Math.round((x - margin) / cellSize);\r\n  const j = Math.round((y - margin) / cellSize);\r\n  \r\n  // Validate that the move is within bounds\r\n  if (i < 0 || i >= boardSize || j < 0 || j >= boardSize) {\r\n    return;\r\n  }\r\n\r\n  // Save the stone that will be placed (the current player's stone)\r\n  const stoneToPlace = boardStateManager.getCurrentBoard().currentPlayer;\r\n  const success = boardStateManager.getCurrentBoard().placeStone(i, j);\r\n  if (!success) {\r\n    alert(\"Invalid move. Only the last stone can be removed or suicide moves are not allowed.\");\r\n    return;\r\n  }\r\n  \r\n  // Broadcast the move if online\r\n  if (syncManager.getIsOnline() && syncManager.getCurrentSyncTarget() !== null) {\r\n    const currentBoard = boardStateManager.getCurrentBoard();\r\n    socketClient.broadcastStoneMove(i, j, stoneToPlace, currentBoard.currentPlayer, currentBoard.boardSize);\r\n  }\r\n\r\n  redraw();\r\n}\r\n\r\n// Remove the old click listener and add a unified listener for both mouse and touch events.\r\ncanvas.addEventListener(\"click\", handleCanvasInteraction);\r\ncanvas.addEventListener(\"touchstart\", handleCanvasInteraction);\r\n\r\n// Also, add a CSS rule to the canvas to disable default touch actions:\r\nconst styleElem = document.createElement(\"style\");\r\nstyleElem.textContent = `#goCanvas { touch-action: none; }`;\r\ndocument.head.appendChild(styleElem);\r\n\r\npopulateSavedGames();\r\nredraw();\r\n"],"names":["Stone","__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","boardSize","this","grid","moveHistory","currentPlayer","Black","blackScore","whiteScore","initBoard","i","j","getNeighbors","neighbors","push","groupHasLiberty","stone","visited","Set","stack","length","pop","ci","cj","has","add","ni","nj","removeGroup","removedCount","captureStones","opponent","White","placeStone","lastMove","canvas","board","showStoneOrder","ctx","getContext","Error","setBoard","newBoard","boardSizeSelect","document","getElementById","toString","getMargin","width","drawBoard","margin","cellSize","clearRect","height","fillStyle","fillRect","strokeStyle","pos","beginPath","moveTo","lineTo","stroke","drawStone","font","textAlign","textBaseline","order","move","x","y","fillText","radius","arc","Math","PI","fill","saveGame","timestamp","Date","toISOString","gameState","name","toLocaleString","savedGames","JSON","parse","localStorage","getItem","setItem","stringify","loadGame","deleteSavedGame","index","splice","getSavedGames","arrayBufferToBase64","buffer","binary","bytes","Uint8Array","byteLength","String","fromCharCode","window","btoa","base64ToArrayBuffer","base64","atob","charCodeAt","encryptData","plaintext","passphrase","encoder","TextEncoder","salt","crypto","getRandomValues","iv","subtle","importKey","encode","keyMaterial","deriveKey","iterations","hash","encrypt","ciphertextBuffer","encryptedObject","EncryptionUtil","ciphertext","decryptData","encryptedStr","decoder","TextDecoder","decrypt","decryptedBuffer","decode","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","withNativeArrayBuffer","ArrayBuffer","isView","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","byteOffset","TEXT_ENCODER","lookup","chars","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","SEPARATOR","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","shift","slice","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","args","Array","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","then","setTimeoutFn","globalThisShim","self","Function","pick","attr","k","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","randomString","now","random","TransportError","constructor","reason","description","context","super","Transport","writable","query","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","_polling","_poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","join","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","unloadHandler","attachEvent","hasXHR2","newRequest","responseType","concat","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","state","expectedLength","isBinary","TransformStream","transform","controller","header","headerArray","DataView","getUint16","view","n","getUint32","pow","enqueue","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","arrayBuffer","encoded","encodePacketToBinary","payloadLength","setUint8","setUint16","setBigUint64","BigInt","pipeTo","_writer","getWriter","read","done","polling","assign","re","parts","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","c","utf8Length","ceil","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","map","filter","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","deconstruction","unshift","isObject","Decoder","reviver","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","next","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","min","max","factor","jitter","attempts","duration","rand","deviation","floor","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","autoConnect","v","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","onStoneMove","registerListeners","getSocket","moveData","console","log","username","myUsernameEl","textContent","broadcastStoneMove","nextPlayer","boardStateManager","renderer","isOnline","currentSyncTarget","syncButton","modeSelect","userListContainer","usernameContainer","initializeUI","registerSocketEvents","getIsOnline","setCurrentBoard","isConnectedTo","socketId","getCurrentSyncTarget","getCurrentSyncTargetUsername","style","display","backgroundColor","dispatchEvent","Event","selectedElem","querySelector","targetId","getAttribute","getCurrentBoard","alert","background","updateSyncUI","users","filteredUsers","user","populateUserList","fromUsername","fromSocket","showSyncRequestModal","boardState","toSocket","updateBoard","innerHTML","userElem","createElement","setAttribute","cursor","querySelectorAll","el","classList","remove","appendChild","syncInfo","color","fancyBackground","modalOverlay","className","modalContent","modalText","buttonContainer","acceptButton","body","removeChild","declineButton","defaultBoardSize","boardStates","currentBoardSize","getBoard","Board","PREDEFINED_PASSWORD","savedGameIndexToDelete","blackScoreElem","whiteScoreElem","turnIndicatorElem","savedGamesContainer","deleteModal","BoardStateManager","parseInt","BoardRenderer","socketClient","SocketClient","syncManager","SyncManager","savedCurrentGameStr","GameStorage","updateScoreBoard","redraw","saveCurrentGame","populateSavedGames","game","btn","preventDefault","hideDeleteModal","handleCanvasInteraction","clientX","clientY","rect","getBoundingClientRect","TouchEvent","touches","xDisplayed","left","yDisplayed","top","getCanvasCoordinates","round","stoneToPlace","currentBoard","newBoardSize","removeItem","jsonString","encryptedData","blob","URL","createObjectURL","a","download","click","files","target","file","encryptedContent","decryptedContent","readAsText","importGameFromFile","confirm","styleElem","head"],"sourceRoot":""}